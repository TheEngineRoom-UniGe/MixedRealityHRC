//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using RosMessageGeneration;

namespace RosMessageTypes.BaxterHrc
{
    public class ActionServiceRequest : Message
    {
        public const string RosMessageName = "baxter_hrc/ActionService";

        public string operation;
        public string arm;
        public ArmJoints joints;
        public Geometry.Pose pick_pose;
        public Geometry.Pose[] waypoints;
        public Geometry.Pose place_pose;

        public ActionServiceRequest()
        {
            this.operation = "";
            this.arm = "";
            this.joints = new ArmJoints();
            this.pick_pose = new Geometry.Pose();
            this.waypoints = new Geometry.Pose[0];
            this.place_pose = new Geometry.Pose();
        }

        public ActionServiceRequest(string operation, string arm, ArmJoints joints, Geometry.Pose pick_pose, Geometry.Pose[] waypoints, Geometry.Pose place_pose)
        {
            this.operation = operation;
            this.arm = arm;
            this.joints = joints;
            this.pick_pose = pick_pose;
            this.waypoints = waypoints;
            this.place_pose = place_pose;
        }
        public override List<byte[]> SerializationStatements()
        {
            var listOfSerializations = new List<byte[]>();
            listOfSerializations.Add(SerializeString(this.operation));
            listOfSerializations.Add(SerializeString(this.arm));
            listOfSerializations.AddRange(joints.SerializationStatements());
            listOfSerializations.AddRange(pick_pose.SerializationStatements());
            
            listOfSerializations.Add(BitConverter.GetBytes(waypoints.Length));
            foreach(var entry in waypoints)
                listOfSerializations.Add(entry.Serialize());
            listOfSerializations.AddRange(place_pose.SerializationStatements());

            return listOfSerializations;
        }

        public override int Deserialize(byte[] data, int offset)
        {
            var operationStringBytesLength = DeserializeLength(data, offset);
            offset += 4;
            this.operation = DeserializeString(data, offset, operationStringBytesLength);
            offset += operationStringBytesLength;
            var armStringBytesLength = DeserializeLength(data, offset);
            offset += 4;
            this.arm = DeserializeString(data, offset, armStringBytesLength);
            offset += armStringBytesLength;
            offset = this.joints.Deserialize(data, offset);
            offset = this.pick_pose.Deserialize(data, offset);
            
            var waypointsArrayLength = DeserializeLength(data, offset);
            offset += 4;
            this.waypoints= new Geometry.Pose[waypointsArrayLength];
            for(var i = 0; i < waypointsArrayLength; i++)
            {
                this.waypoints[i] = new Geometry.Pose();
                offset = this.waypoints[i].Deserialize(data, offset);
            }
            offset = this.place_pose.Deserialize(data, offset);

            return offset;
        }

        public override string ToString()
        {
            return "ActionServiceRequest: " +
            "\noperation: " + operation.ToString() +
            "\narm: " + arm.ToString() +
            "\njoints: " + joints.ToString() +
            "\npick_pose: " + pick_pose.ToString() +
            "\nwaypoints: " + System.String.Join(", ", waypoints.ToList()) +
            "\nplace_pose: " + place_pose.ToString();
        }
    }
}
